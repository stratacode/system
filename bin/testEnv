# Environment file to be source by runTests or runTest if it's run separately

SC=${SC:-"/usr/local/scMain"}
echo "Test project: ${SC}"
SC_RESULTS_DIR=${SC_RESULTS_DIR:-"/var/scc/testResults"}
VALID_RESULTS="${SC}/test/valid"
# Create a unique name for this test - based on the date plus a suffix to ensure it's unique
TEST_DATE_TAG=$(date +"%Y_%m_%d")

UPDATE=0
STOP_ON_ERROR=0
SCRIPTS=()
SCRIPT_DIR="${SC}/bundles/test/test/scripts"
ECHO_ERRORS=1
ECHO_OUTPUT=${ECHO_OUTPUT:-0}
INPUT_FILE=""
INTERACTIVE=0
IGNORE_ERRORS=0

if [ ! -d $VALIDRESULTS ] ; then
   echo "Valid results directory: $VALIDRESULTS does not exist"
   acceptYN=""
   while [[ "$acceptYN" != "y" && "$acceptYN" != "n" ]] ; 
   do
      echo "To init a new environment, run:"
      echo "sudo mkdir $VALIDRESULTS; chown $USER $VALIDRESULTS"
      echo "sudo mkdir -p $SC_RESULTS_DIR; chown $USER $RESULTS_DIR"
      read -p "Init new test environment (requires sudo)? [yn] " acceptYN
      if [[ ! "$acceptYN" =~ [yn] ]] ; then
          echo "Invalid: $acceptYN - enter y or n"
      fi
   done

   if [ "$acceptYN" = "y" ] ; then 
      echo "sudo mkdir $VALIDRESULTS; chown $USER $VALIDRESULTS"
      sudo mkdir $VALIDRESULTS; chown $USER $VALIDRESULTS
      echo "sudo mkdir -p $SC_RESULTS_DIR; chown $USER $RESULTS_DIR"
      sudo mkdir $SC_RESULTS_DIR; chown $USER $RESULTS_DIR
   else 
      echo "Exiting runTests"
      exit 1
   fi
fi

while [[ $# -gt 0 ]]
do
   case $1 in
       --results-dir)
       SC_RESULTS_DIR="$2"
       shift 
       shift 
       ;;
       --tag)
       TEST_RUN_NAME="$2"
       shift 
       shift 
       ;;
       -i|--input)
       INPUT_FILE="$2"
       shift 
       shift 
       ;;
       -u|--update)
       UPDATE=1
       shift
       ;;
       --ignore)
       IGNORE_ERRORS=1
       shift
       ;;
       -p|--prompt)
       INTERACTIVE=1
       shift
       ;;
       -v|--verbose)
       ECHO_ERRORS=1
       ECHO_OUTPUT=1
       echo "Verbose output and errors enabled"
       shift
       ;;
       -q|--quiet)
       ECHO_ERRORS=0
       echo "Quiet mode: no error or test output displayed"
       shift
       ;;
       -s|--stop)
       STOP_ON_ERROR=1
       shift
       ;;
       -h|--help)
       echo "StrataCode test help: run test scripts or individual tests using: "
       echo "runTests [test-options] [list of script names to run from SCRIPT_DIR: $SCRIPT_DIR - defaults to contents of 'allScripts']"
       echo " - or - "
       echo "runTest <test-name> [test-options] testCommand testArgs"
       echo ""
       echo "--- Test Options:"
       echo "  -p/--prompt - interactive mode"
       echo "  -v/--verbose - verbose output and errors enabled"
       echo "  ---ignore - ignore errors"
       echo "  --tag - name of directory to store results in: $SC_RESULTS_DIR"
       echo "  -q/--quiet - No error or test output displayed"
       echo "  -s/--stop - Stop on error"
       echo "  --results-dir <dir> - change results dir from default: $SC_RESULTS_DIR"
       exit 1
       ;;
       *)
       # All test options must be in front - Rest of the args go for the list of scripts or the arguments to the command we are running
       while [[ $# -gt 0 ]]
       do
          SCRIPTS+=("$1") 
          shift
       done
       ;;
   esac
done

if [ ! -d $SC_RESULTS_DIR ] ; then
   echo "Test results directory: $SC_RESULTS_DIR does not exist"
   exit 1
fi

# Walk through the other tests run on this date to create a unique name
runIx=0
while [ -d ${SC_RESULTS_DIR}/${TEST_DATE_TAG}_${runIx} ] ; do
   ((runIx++))
done

TEST_RUN_NAME="${TEST_DATE_TAG}_${runIx}"
RUN_DIR="$SC_RESULTS_DIR/$TEST_RUN_NAME"

TEST_DIR="$SC_RESULTS_DIR/$TEST_RUN_NAME/$TEST_RESULTS_NAME"

export SC_RESULTS_DIR
export RUN_DIR
export VALID_RESULTS
export TEST_RUN_NAME
export ECHO_ERRORS
export ECHO_OUTPUT
export INTERACTIVE
export STOP_ON_ERROR
export UPDATE
export IGNORE_ERRORS
export TEST_DIR

