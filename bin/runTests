#!/bin/bash

if [ -z "TEST_HOME" ] ; then
   if [ -z "$BASH_SOURCE" ] ; then 
      echo "No default source for tests - must set TEST_HOME environment variable to path to test scripts"
      exit -1
   fi
fi
TEST_HOME=${TEST_HOME:-`dirname $BASH_SOURCE`}

if [ ! -f $TEST_HOME/testEnv ] ; then
   echo "No testEnv file in TEST_HOME: $TEST_HOME"
   exit -1
fi

source $TEST_HOME/testEnv

echo "Running ${SCRIPTS[*]} in ${SCRIPT_DIR} with results in: ${RESULTS_DIR}/${TEST_RUN_NAME} comparing against: $VALID_RESULTS"

if [ ${#SCRIPTS[@]} == 0 ] ; then
  SCRIPTS=( $(cat $SCRIPT_DIR/allScripts) )
fi

for SCRIPT in "${SCRIPTS[@]}"
do
   FILE="${SCRIPT_DIR}/${SCRIPT}"
   if [ $f $FILE ] ; then
      export SCRIPT
      echo "Running test script: $FILE"
      . "$FILE"
      if [ $? != 0 ] ; then
         if [ "$STOP_ON_ERROR" = "1" ] ; then
            echo "Exiting due to errors running script: $SCRIPT"
            exit 1
         else
            echo "Errors running script: $SCRIPT"
         fi
      fi
   else
      echo "Error - test script not found: $FILE"
      exit 1
   fi
done

if [ -d "$RUN_DIR" ] ; then
   if [ -f "$RUN_DIR/new" ] ; then
      echo "First run tests - `wc -l < $RUN_DIR/new` found:"
      cat "$RUN_DIR/newDetail"

      acceptYN=""
      while [[ "$acceptYN" != "y" && "$acceptYN" != "n" ]] ; 
      do
         read -p "Accept all new output? [yn] " acceptYN
         if [[ ! "$acceptYN" =~ [yn] ]] ; then
             echo "Invalid: $acceptYN - enter y or n"
         fi
      done

      if [ "$acceptYN" = "y" ] ; then 
         newTests=($(cat ${RUN_DIR}/new))

         for newTest in "${newTests[@]}"
         do
            echo "Updating valid file for $newTest"
            TEST_DIR="$RUN_DIR/$newTest"
            VALID_DIR="$VALID_RESULTS/$newTest"
            cp "$TEST_DIR/outf" "$VALID_DIR/out"
            cp "$TEST_DIR/status" "$VALID_DIR/status"
            cp "$TEST_DIR/cmd" "$VALID_DIR/cmd"
         done
      fi

   fi
   if [ -f "$RUN_DIR/failed" ] ; then
      echo "Passed: `wc -l < $RUN_DIR/passed | xargs` Errors: `wc -l < $RUN_DIR/failed | xargs` of total: `wc -l < $RUN_DIR/testsRun | xargs`"
      echo "Failed tests ---- :"
      cat "$RUN_DIR/failedDetail"

      acceptYN=""
      while [[ "$acceptYN" != "y" && "$acceptYN" != "n" ]] ; 
      do
         read -p "Accept all new results? [yn] " acceptYN
         if [[ ! "$acceptYN" =~ [yn] ]] ; then
             echo "Invalid: $acceptYN - enter y or n"
         fi
      done

      if [ "$acceptYN" = "y" ] ; then 
         testArray=($(cat ${RUN_DIR}/failed))

         for testName in "${testArray[@]}"
         do
            echo "Updating valid file for $testName"
            TEST_DIR="$RUN_DIR/$testName"
            VALID_DIR="$VALID_RESULTS/$testName"
            cp "$TEST_DIR/outf" "$VALID_DIR/out"
            cp "$TEST_DIR/status" "$VALID_DIR/status"
            cp "$TEST_DIR/cmd" "$VALID_DIR/cmd"
            if [ -d "$TEST_DIR/pages" ] ; then
               if [ -d "$VALID_DIR/pages" ] ; then
                  rm -rf "$VALID_DIR/pages" 
               fi
               cp -r "$TEST_DIR/pagesf" "$VALID_DIR/pages"
               echo "Updated valid pages dir $VALID_DIR/pages"
            else 
               rm -rf "$VALID_DIR/pages" 
            fi
         done
      fi
   elif [ -f "$RUN_DIR/passed" ] ; then 
       echo "Passed: `wc -l < $RUN_DIR/passed | xargs`" 
   fi
   if [ -f "$RUN_DIR/ignored" ] ; then
       echo "Ignored:"
       cat $RUN_DIR/ignored
   fi
else
   echo "Something went wrong - no test run directory: $RUN_DIR"
   exit 1
fi
